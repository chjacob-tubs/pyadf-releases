import os
from pyadf import *
if 'pyadfenv' not in globals():
    from pyadf.Initialization import *

###################################################################
#
# PyADF test ADFPlot_KinPotentials
#
# Test calculation of kinetic energy potentials
#
# Test by Christoph Jacob, ETH Zurich and KIT, 2009-2010
#
###################################################################

##########################################################
# we start with a helium atom (one orbital, vW is exact)
##########################################################

he = molecule()
he.add_atoms(['He'], [[-0.0, 0.0, 0.0]])

settings = adfsettings()
settings.set_save_tapes([21, 10])

results = adfsinglepointjob(he, 'ZORA/QZ4P', settings=settings).run()

agrid = adfgrid(results)

# the total KS potential
pot_tot = results.get_potential(grid=agrid, pot='total')

# the von Weizsaecker potential
pot_kin_vw = results.get_kinetic_potential(grid=agrid, func='weiz')

# shift kinetic potential
shift = pot_tot.get_values().flat[-1] + pot_kin_vw.get_values().flat[-1]
pot_kin_vw = pot_kin_vw - float(shift)

# difference potential: should be zero
diff_pot = pot_tot + pot_kin_vw

int_diff = diff_pot.integral(func=lambda x: abs(x))
print("Integral of difference in potentials", int_diff)

if 'unittesting' in pyadfenv.options:
    # there is still (quite a large) difference because of
    # constant shift and basis set incompleteness
    # (see master thesis of Sam Fux)
    testobj.assertAlmostEqual(int_diff, 684.1995, 2)

############################################################################
# kinetic potential for a water molecule
############################################################################

h2o = molecule(os.path.join(pyadfenv.outdir, 'H2O.xyz'))

settings = adfsettings()
settings.set_save_tapes([21, 10])
settings.set_lmo(True)

results = adfsinglepointjob(h2o, 'SZ', settings=settings).run()

cgrid = cubegrid(results.get_molecule(), spacing=0.1)

agrid = adfgrid(results)

pot_kin_tot = results.get_kinetic_potential(grid=agrid, func='PW91k')
pot_kin_loc = results.get_kinetic_potential(grid=agrid, func='PW91k', orbs={'Loc': [1, 2, 3, 4, 5]})

diff_pot = pot_kin_tot - pot_kin_loc

int_diff = diff_pot.integral(func=lambda x: abs(x))
print("Integral of difference in potentials", int_diff)

if 'unittesting' in pyadfenv.options:
    testobj.assertAlmostEqual(int_diff, 0.0, 6)
