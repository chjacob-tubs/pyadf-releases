import os
from pyadf import *
if 'pyadfenv' not in globals():
    from pyadf.Initialization import *


def check_results_cosmo_hexane(etot, dip_vect, dip_magn):
    testobj.assertAlmostEqual(etot, -76.35384175, 6)
    testobj.assertAlmostEqual(dip_magn, 0.7715712187, 6)
    testobj.assertAlmostEqual(dip_vect, [0.0, 0.0, 0.7715712187], 4)


def check_results_cosmo_water(etot, dip_vect, dip_magn):
    testobj.assertAlmostEqual(etot, -76.35254034, 6)
    testobj.assertAlmostEqual(dip_magn, 0.8592634964, 6)
    testobj.assertAlmostEqual(dip_vect, [0.0, 0.0, 0.8592634964], 4)


h2o = molecule(os.path.join(pyadfenv.outdir, 'water.xyz'))
h2o.set_symmetry('NOSYM')

# COSMO with Hexane as solvent

settings = adfsettings(functional='PBE')
settings.set_cosmo('Hexane')

results = adfsinglepointjob(h2o, 'DZP', settings=settings, options=['TOTALENERGY']).run()

toten = results.get_result_from_tape('Total Energy', 'Total energy')
dipole_vect = results.get_dipole_vector()
dipole_magn = results.get_dipole_magnitude()

print(f"Total energy: {toten:12.6f}")
print(f"Dipole moment magnitude: {dipole_magn:12.6f}")
print(f"Dipole monent vector: [{dipole_vect[0]:12.6f}, {dipole_vect[1]:12.6f}, {dipole_vect[2]:12.6f}]")

if 'unittesting' in pyadfenv.options:
    check_results_cosmo_hexane(toten, dipole_vect, dipole_magn)

# COSMO with Water as solvent

settings = adfsettings(functional='PBE')
settings.set_cosmo('Water')

results = adfsinglepointjob(h2o, 'DZP', settings=settings, options=['TOTALENERGY']).run()

toten = results.get_result_from_tape('Total Energy', 'Total energy')
dipole_vect = results.get_dipole_vector()
dipole_magn = results.get_dipole_magnitude()

print(f"Total energy: {toten:12.6f}")
print(f"Dipole moment magnitude: {dipole_magn:12.6f}")
print(f"Dipole monent vector: [{dipole_vect[0]:12.6f}, {dipole_vect[1]:12.6f}, {dipole_vect[2]:12.6f}]")

if 'unittesting' in pyadfenv.options:
    check_results_cosmo_water(toten, dipole_vect, dipole_magn)
