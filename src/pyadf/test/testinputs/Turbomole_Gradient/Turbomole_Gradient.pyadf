import os
from pyadf import *
if 'pyadfenv' not in globals():
    from pyadf.Initialization import *

_verbose_level = 5

h2o = molecule(os.path.join(pyadfenv.outdir, 'H2O.xyz'))

# BP86 single point calculation

settings = TurbomoleGradientSettings(verbose_level=_verbose_level)
settings.set_basis_set('cc-pVDZ')
settings.set_dft_functional('b-p')
settings.set_ri(False)

results = TurbomoleGradientJob(h2o, method='dft', settings=settings).run()

grad = results.get_gradient_vector()

print("Gradient:", grad)

testobj.assertAlmostEqualVectors(grad, [0.00787206, -0.01779968, -0.01344721,
                                        -0.00725577, 0.00162172, 0.00287625,
                                        -0.00064882, 0.01615354, 0.01057074], 5)

# BP86 single point calculation (RI)

settings = TurbomoleGradientSettings(verbose_level=_verbose_level)
settings.set_basis_set('cc-pVDZ')
settings.set_dft_functional('b-p')
settings.set_ri(True)

results = TurbomoleGradientJob(h2o, method='dft', settings=settings).run()

grad = results.get_gradient_vector()

print("Gradient:", grad)

testobj.assertAlmostEqualVectors(grad, [0.00787639, -0.01780116, -0.01344924,
                                        -0.00726607, 0.00161574, 0.00287496,
                                        -0.00064287, 0.01616098, 0.01057406], 5)
