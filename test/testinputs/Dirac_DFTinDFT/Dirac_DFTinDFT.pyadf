import shutil

file_h2o_1 = os.path.join (pyadfenv.outdir, 'FDE-H2O-1.xyz')
file_h2o_2 = os.path.join (pyadfenv.outdir, 'FDE-H2O-2.xyz')
file_mol   = os.path.join (pyadfenv.outdir, 'FDE-mol.xyz')

m_h2o_1 = molecule(file_h2o_1)
m_h2o_2 = molecule(file_h2o_2)
m_mol   = molecule(file_mol)

m_tot = m_mol + m_h2o_1 + m_h2o_2

print m_tot.print_coordinates()

# Prepare first water molecule
r_h2o_1 = adfsinglepointjob( m_h2o_1, 'SZ', options=['NOSYMFIT']).run()

# Prepare second water molecule
r_h2o_2 = adfsinglepointjob( m_h2o_2, 'SZ', options=['NOSYMFIT']).run()

# isolated water molecule
r_mol = adfsinglepointjob( m_mol, 'DZP', options=['NOSYMFIT']).run()

dipole_vect = r_mol.get_dipole_vector()
print "Dipole moment for isolated water molecule (ADF): ", dipole_vect

if 'unittesting' in pyadfenv.options :
    testobj.assertAlmostEqual(dipole_vect,  [0.0, 0.0, 0.731050], 4)

fdesettings = adfsettings()
# save TAPE10 is needed for exporting the FDE potential
fdesettings.set_save_tapes([21,10])
fdesettings.set_functional('BP86')
fdesettings.set_integration(accint=4.0)

frags = [fragment(r_h2o_1, [m_h2o_1], isfrozen=True, fdeoptions={'RELAX':""}),
         fragment(r_h2o_2, [m_h2o_2], isfrozen=True, fdeoptions={'RELAX':""}),
	 fragment(None,    [m_mol]  ) ]

fderes = adffragmentsjob( frags, basis="DZP", settings=fdesettings,
                         options=['NOSYM'], fde={'RELAXCYCLES':2}).run()

dipole_vect = fderes.get_dipole_vector()
print "Dipole moment for FDE water molecule (ADF): ", dipole_vect

if 'unittesting' in pyadfenv.options :
    testobj.assertAlmostEqual(dipole_vect,  [0.0, 0.0, 0.775334], 4)

# Dirac without embedding
settings = diracsettings(method='DFT', hamiltonian='Levy', nucmod='point', properties=['dipole'])
dirac_res = diracsinglepointjob( m_mol, basis='cc-pVDZ', settings=settings ).run()

energy = dirac_res.get_energy()
print "LDA energy (Levy-Lebold) for isolated water molecule (Dirac): ", energy

dipole_vect = dirac_res.get_dipole_vector()
print "Dipole moment for isolated water molecule (Dirac): ", dipole_vect

if 'unittesting' in pyadfenv.options :
    testobj.assertAlmostEqual(energy,  -75.8552958824, 6)
    testobj.assertAlmostEqual(dipole_vect,  [0.0, 0.0, 0.774208], 4)

# Dirac with embedding
dirac_res = diracsinglepointjob( m_mol, basis='cc-pVDZ', fdein=fderes, settings=settings ).run()

energy = dirac_res.get_energy()
print "LDA energy (Levy-Lebold) for FDE water molecule (Dirac): ", energy

dipole_vect = dirac_res.get_dipole_vector()
print "Dipole moment for FDE water molecule (Dirac): ", dipole_vect

if 'unittesting' in pyadfenv.options :
    testobj.assertAlmostEqual(energy, -75.8546742406, 6)
    testobj.assertAlmostEqual(dipole_vect,  [0.0, 0.0, 0.840760], 4)
