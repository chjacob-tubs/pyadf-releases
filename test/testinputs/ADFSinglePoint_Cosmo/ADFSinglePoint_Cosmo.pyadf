
def check_results_cosmo_hexane (testobj, toten, dipole_vect, dipole_magn):
    testobj.assertAlmostEqual(toten,       -76.35384175, 6)
    testobj.assertAlmostEqual(dipole_magn, 0.7715712187, 6)
    testobj.assertAlmostEqual(dipole_vect, [0.0, 0.0, 0.7715712187], 4)

def check_results_cosmo_water (testobj, toten, dipole_vect, dipole_magn):
    testobj.assertAlmostEqual(toten,       -76.35254034, 6)
    testobj.assertAlmostEqual(dipole_magn, 0.8592634964, 6)
    testobj.assertAlmostEqual(dipole_vect, [0.0, 0.0, 0.8592634964], 4)

h2o = molecule (os.path.join(pyadfenv.outdir, 'water.xyz'))
h2o.set_symmetry('NOSYM')

# COSMO with Hexane as solvent

settings = adfsettings(functional='PBE')
settings.set_cosmo('Hexane')

results = adfsinglepointjob(h2o, 'DZP', settings=settings, options=['TOTALENERGY']).run()

toten = results.get_result_from_tape('Total Energy', 'Total energy')
dipole_vect = results.get_dipole_vector ()
dipole_magn = results.get_dipole_magnitude ()

print "Total energy: %12.6f" % toten
print "Dipole moment magnitude: %12.6f" % dipole_magn
print "Dipole monent vector: [%12.6f, %12.6f, %12.6f]" % (dipole_vect[0], dipole_vect[1], dipole_vect[2])

if 'unittesting' in pyadfenv.options :
    check_results_cosmo_hexane(testobj, toten, dipole_vect, dipole_magn)

# COSMO with Water as solvent

settings = adfsettings(functional='PBE')
settings.set_cosmo('Water')

results = adfsinglepointjob(h2o, 'DZP', settings=settings, options=['TOTALENERGY']).run()

toten = results.get_result_from_tape('Total Energy', 'Total energy')
dipole_vect = results.get_dipole_vector ()
dipole_magn = results.get_dipole_magnitude ()

print "Total energy: %12.6f" % toten
print "Dipole moment magnitude: %12.6f" % dipole_magn
print "Dipole monent vector: [%12.6f, %12.6f, %12.6f]" % (dipole_vect[0], dipole_vect[1], dipole_vect[2])

if 'unittesting' in pyadfenv.options :
    check_results_cosmo_water(testobj, toten, dipole_vect, dipole_magn)